Feature: Extract product details from JSON in d_product_revenue table

  Background:
    Given the d_product_revenue table contains a column named product_details
    And product_details contains JSON strings with specific product data

  Scenario: Extract fields from JSON for a single product entry
    Given a product JSON string with known structure in the product_details column
    When I query the table to extract individual fields
    Then I should get 'batch_number', 'expiration_date', 'manufacturing_site', 'regulatory_approval', and 'price' as separate columns

  Scenario Outline: Validate correct extraction with varied JSON values
    Given a product JSON in the format:
      """
      {
        "batch_number": "<batch_number>",
        "expiration_date": "<expiration_date>",
        "manufacturing_site": "<manufacturing_site>",
        "regulatory_approval": "<regulatory_approval>",
        "price": <price>
      }
      """
    When the JSON field values are extracted
    Then the extracted fields should match expected values
    Examples:
      | batch_number    | expiration_date | manufacturing_site | regulatory_approval | price  |
      | BATCH2024-5678  | 2025-12-31      | Site A             | Approved            | 250.75 |
      | BATCH2023-4321  | 2024-06-15      | Site B             | Pending             | 180.00 |

  Scenario: Handle unexpected JSON structure
    Given a malformed JSON string in the product_details column
    When I attempt to extract fields
    Then an error message should indicate a JSON parsing issue

  Scenario: Handle missing fields in JSON
    Given a JSON string missing some optional fields in the product_details column
    When I extract fields
    Then missing fields should be returned as NULL
    And an appropriate warning should be logged

  Scenario: SQL Query for extracting JSON fields
    Given the requirement to construct a SQL query
    When I write the SQL query to extract each field
    Then the query should be error-free
    And it should successfully parse JSON into separate columns

  Scenario: Validate successful execution of SQL query
    Given the SQL query:
      """
      SELECT
        product_details:batch_number AS batch_number,
        product_details:expiration_date AS expiration_date,
        product_details:manufacturing_site AS manufacturing_site,
        product_details:regulatory_approval AS regulatory_approval,
        CAST(product_details:price AS double) AS price
      FROM purgo_playground.d_product_revenue
      """
    When the query is executed in Databricks
    Then it should return the fields with expected values and formats
