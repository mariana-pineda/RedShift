Feature: Extract product details from JSON column in purgo_playground.d_product_revenue table

  Background:
    Given the purgo_playground.d_product_revenue table contains a column named product_details
      And product_details is a JSON string with known schema

  Scenario: Extract specific fields from product_details JSON
    Given a product_details JSON string with fields "batch_number", "expiration_date", "manufacturing_site", "regulatory_approval", "price"
    When the JSON string is parsed using Databricks SQL
    Then each field should be correctly extracted and returned as individual columns

  Scenario: Handle missing fields in product_details JSON
    Given a product_details JSON string with missing fields
    When the JSON string is parsed using Databricks SQL
    Then the missing fields should default to NULL in the result set

  Scenario Outline: Validate data types of extracted fields
    Given a <JSONField> in product_details
    When the field is parsed as <DataType>
    Then the extraction should be successful without errors

    Examples:
      | JSONField          | DataType  |
      | batch_number       | STRING    |
      | expiration_date    | DATE      |
      | manufacturing_site | STRING    |
      | regulatory_approval| STRING    |
      | price              | DECIMAL   |

  Scenario: Error handling for malformed JSON strings
    Given a malformed product_details JSON string
    When the JSON string is parsed using Databricks SQL
    Then an error should be returned with message "Malformed JSON in product_details"

  Scenario: Performance considerations under large data volume
    Given a large number of rows in the purgo_playground.d_product_revenue table
    When the query is executed to parse product_details JSON
    Then the execution should complete within a reasonable time with efficient resource utilization


**Technical Details:**
- **Data Values and Formats:** 
  - JSON Schema: `{ "batch_number": STRING, "expiration_date": DATE, "manufacturing_site": STRING, "regulatory_approval": STRING, "price": DECIMAL }`

- **Databricks SQL Extraction Query:**
  
  SELECT 
    product_details:batch_number::STRING AS batch_number,
    product_details:expiration_date::DATE AS expiration_date,
    product_details:manufacturing_site::STRING AS manufacturing_site,
    product_details:regulatory_approval::STRING AS regulatory_approval,
    product_details:price::DECIMAL(10, 2) AS price
  FROM 
    purgo_playground.d_product_revenue;
  

- **Error Conditions and Messages:** 
  - Malformed JSON: Return error message "Malformed JSON in product_details".
  - Missing fields: Default to NULL for fields not present.

- **Validation Rules:**
  - Proper data type conversion: Ensure JSON fields map correctly to expected SQL data types.
  - Efficient querying for large datasets: Optimize for performance during large volume parsing.

- **Acceptance Criteria:**
  - Successfully parse and extract fields from JSON without errors.
  - Handle missing or null fields gracefully.
  - Implementation performance meets operational expectations.